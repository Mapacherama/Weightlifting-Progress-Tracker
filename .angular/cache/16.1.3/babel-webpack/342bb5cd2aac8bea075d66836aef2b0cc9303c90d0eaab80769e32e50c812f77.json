{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this._isLoggedIn = false; // This should be controlled by your login/logout method\n  }\n\n  isLoggedIn() {\n    return this._isLoggedIn;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","_isLoggedIn","isLoggedIn","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Administrator\\Documents\\GitHub\\Weightlifting-Progress-Tracker\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private _isLoggedIn = false;  // This should be controlled by your login/logout method\r\n\r\n  constructor() { }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this._isLoggedIn;\r\n  }\r\n\r\n  // You will also want to implement login/logout methods that control the _isLoggedIn variable.\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAA;IAFQ,KAAAC,WAAW,GAAG,KAAK,CAAC,CAAE;EAEd;;EAEhBC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACD,WAAW;EACzB;;AAPWF,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAI,OAAA,EAAXJ,WAAW,CAAAK,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}